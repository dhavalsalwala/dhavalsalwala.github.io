<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects_academics | </title>
    <link>https://dhavalsalwala.github.io/projects_academic/</link>
      <atom:link href="https://dhavalsalwala.github.io/projects_academic/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects_academics</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>2021 © Dhaval Salwala</copyright><lastBuildDate>Sat, 31 Aug 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://dhavalsalwala.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_2.png</url>
      <title>Projects_academics</title>
      <link>https://dhavalsalwala.github.io/projects_academic/</link>
    </image>
    
    <item>
      <title>FAST VOTE AGGREGATION SCHEME</title>
      <link>https://dhavalsalwala.github.io/projects_academic/dawid-skene/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://dhavalsalwala.github.io/projects_academic/dawid-skene/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
The project builds a Dawid Skene model for classifying the polarity (i.e. positive or negative sentiment) of sentences in movie reviews. Movie reviews were taken from Rotten Tomatoes. Polarity labels furnished through crowd workers in Amazon Mechanical Turk.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GOVERNMENT ANALYTICS</title>
      <link>https://dhavalsalwala.github.io/projects_academic/govt-analytics/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://dhavalsalwala.github.io/projects_academic/govt-analytics/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
Mining pages on social networking websites like Facebook and Twitter is greatly useful in identifying sentiments of people, determining trending topics, identifying target customers for marketing, etc. The task we have considered for this assignment is determing the trending policy topics in Galway based on analysis of tweets from local media house pages like Galway Bay FM News, Galway City Council, Galway County Council, Connacht/City Tribune, RTE News, Galway 2020, Galway Drivers, St. Patrick’s Fest, Bus Eireann and Galway Page. To perform this task, we have made use of Python (for collecting tweets and processing the tweets to identify trending policies) and R (for visualizing our output). Subsequent sections include information on how data was gathered and processed, results and findings.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Multi-Agent Deep Reinforcment Learning</title>
      <link>https://dhavalsalwala.github.io/projects_academic/multi-agent_rl/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://dhavalsalwala.github.io/projects_academic/multi-agent_rl/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
Pursuit is a standard task for benchmarking multi-agent algorithms. The pursuit-evasion domain consists of two sets of agents: evaders and pursuers. The evaders are trying to avoid pursuers, while the pursuers are trying to catch the evaders. The action and observation spaces in this problem are discrete. The agents interact on a two-dimensional grid, and an evader is considered caught if it is surrounded by pursuers on four sides. In order to catch the evaders, the pursuers must learn to cooperate by trapping the evaders on all sides. When the pursuers catch an evader, they receive a reward. The evaders follow a uniform random policy. The domain contains obstacles through which the agents cannot pass. Each pursuer receives a range-limited observation of its surroundings, and must choose between five actions Stay, Go East, Go West, Go South, Go North. The observations contain information about the agent’s surroundings, including the location of nearby pursuers, evaders, and obstacles.
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ONE SHOT FACE RECOGNITION IN KERAS</title>
      <link>https://dhavalsalwala.github.io/projects_academic/one-shot-keras/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://dhavalsalwala.github.io/projects_academic/one-shot-keras/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;LeNet5 based deep convolutional model in Keras with a triplet loss function.&lt;/li&gt;
&lt;li&gt;The model is trained on 10,000 images of the VGG-Face dataset.&lt;/li&gt;
&lt;li&gt;It uses Euclidean distance between image embeddings to predict the image class.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Reinforcement Learning</title>
      <link>https://dhavalsalwala.github.io/projects_academic/rl_algos/</link>
      <pubDate>Sat, 31 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://dhavalsalwala.github.io/projects_academic/rl_algos/</guid>
      <description>&lt;p style=&#39;text-align: justify;&#39;&gt;
All code is written in Python 3 and uses RL environments from OpenAI Gym and MADRL. Advanced techniques use Tensorflow and Keras for neural network implementations.
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
